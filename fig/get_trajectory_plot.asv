
% Generate Problem
clc, clf, clear; warning('off');

% Run this script file from the below directory
% pwd = /Users/moka/Documents/GitHub/AlmostMultisecantBFGS'
%addpath([pwd,'fig/sensing_fig/trajectory_fig_signal0']);
%addpath([pwd,'fig/sensing_fig/trajectory_fig_signal1']);

% Get parameters : gonna use m, n, p, stepsize, num_iter, iter_limit
[m, n, eig_range, class_balance, logreg_eps, stepsize, p, sigma, ...
    num_iter, iter_limit, seed, signal] = get_parameter();

%seed_val = [1,2,3,4,5,6,7,8,9,10]; % seed number
seed_val = [];
for i=1:10, seed_val = [seed_val, randi(100)]; end
sigma_val = [0.5, 1, 5, 10, 20]; eig_range_val = [1,5,10,15, 20];
signal_val = [0, 1];
mn_list = ["m_bigger_n" "m_smaller_n"];

for mn = mn_list
    if mn == mn_list(1), m=1000; n=200; end
    if mn == mn_list(2), m=200; n=1000; end

    for signal = signal_val                 % 0 or 1
        for sigma = sigma_val               % [1,5,10,15,20]
            for eig_range = eig_range_val   % [1,5,10,15,20]
                
                iter = 0;
                for seed = seed_val         % [1,2,3,4,5]
                    
                    rng(seed);

        
                    % ----------- Logistic Regression Problems ----------- %
                    [fn, grad, prob_difficulty, matrix_A, y_sol] = ...
                     logistic_regression(m, n, seed, sigma, class_balance, logreg_eps, eig_range, signal);
            
                    % -------- Plot Bar Graph of singular values of matrix_A -------- %%
                    singular_values = svd(matrix_A);
                    bar(singular_values); % Adjust 'NumBins' as needed
                    xlabel('Descending order of each singular value', 'FontSize', 22);
                    ylabel('Singular Value', 'FontSize', 22);
                    title('Bar Graph of the Singular Values', 'FontSize', 20);
            
                    % Set the font size of the tick labels
                    ax = gca;
                    ax.XAxis.FontSize = 20; % Change the font size of the x-axis tick labels
                    ax.YAxis.FontSize = 20; % Change the font size of the y-axis tick labels
            
                    % Set the ceiling of the y-axis
                    ylim([0, singular_values(1)]); % Adjust the upper limit as needed
                    xlim([-1, n])
            
                    name = 'signal_'+string(signal)+'_sigma_'+string(sigma) + '_eigrange_'+string(eig_range)+ '_seed_'+string(iter);
                    folder_name = 'fig/sensing_fig/' + mn;
                    if seed == seed_val(1)
                        saveas(gcf, fullfile(folder_name ,'bargraph_'+ name+'.png'));
                    end
                     
                    % Update the plot at every iteration
                    % drawnow;
                    
                    % ----------- Run QN simulations ----------- %
                    [trajectories, trajectory_grad_square] = ...
                        run_qn_sensing_problem(n, fn, grad, stepsize, num_iter, p, iter_limit, name, folder_name);
                    
                    % --- Statistics - iteration by threshold --- %
                    [threshold_iter, threshold_iter_grad] = get_statistics(trajectories, trajectory_grad_square);
                    if iter==0
                        avg_iter = threshold_iter;
                        avg_iter_grad = threshold_iter_grad;
                    
                    else 
                        avg_iter = avg_iter + threshold_iter;
                        avg_iter_grad = avg_iter_grad + threshold_iter_grad;
                        if iter==size(seed_val,1)
                            avg_iter = avg_iter/size(seed_val,1);
                            avg_iter_grad = avg_iter_grad/size(seed_val,1);
                        end
                    end

                    iter = iter + 1;

                end
                
            end
        end
    end
end
       