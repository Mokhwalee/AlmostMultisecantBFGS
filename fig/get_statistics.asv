
function [traj_cell, traj_grad_cell] = get_statistics(trajectories, trajectory_grad_square)

    threshold = [1e-2, 1e-3, 1e-4, 1e-5, 1e-6, 1e-7, 1e-8, 1e-9, 1e-10, ...
                 1e-11, 1e-12, 1e-13, 1e-14, 1e-15];

    % Methods : L-BFGS, MS-BFGS, L-MS-BFGS(paper, 2-loop), 
    %           L-MS-BFGS-Schur-inv-mu, MS-BFGS-Schur-inv-mu
    
    traj_cell = {};
    traj_grad_cell = {};

    % find the smallest iteration number when the value is below threshold
    traj = NaN(size(trajectories,2), length(threshold));
    traj_grad = NaN(size(trajectory_grad_square,2), length(threshold));

    for j = 1:size(trajectories,2) % method
        for i = 1:length(threshold) % threshold
            traj(j,i) = min(find(trajectories(:,j) < threshold(i), 1));
            traj_grad(j,i) = min(find(trajectory_grad_square(:,j) < threshold(i), 1));
        end
    end


end
